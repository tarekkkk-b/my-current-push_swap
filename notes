# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    notes                                              :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: tabadawi <tabadawi@student.42abudhabi.a    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/01/23 17:45:59 by tabadawi          #+#    #+#              #
#    Updated: 2024/01/23 18:55:42 by tabadawi         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

1- we have to parse the input
	
	so basically check if all are numbers, if not, return error message

	so we are passing either arguments, or a double pointer, or a mix of both

	but here are things to look out for:
	
	- should only be numbers
	- should not have duplicates

	ill have to write a function that kind of mimics strtol which basically
	converts the string to a long input

	update:

	we figured out a way to handle multiple input methods, we will join the arguments,
	then split them up to a 2d array, from there we will take each input pass it thru a function
	checks if the string is full of numbers by using is digit, then we atoi it and pass it
	to the linked list but first check if it already existed in the list

2- linked lists apply
	
	so the linked lists basicaly are used to edt the top element of the stack,
	we could use it to either add or remove the first element of the stack

3- the pdf rules
	
	make a code for every one of the rules, which will be used to order
	the order of the stack

4- applying algorithm to sort

	mechanical turk
	
	our algorithm must use the rules to be able to sort the numbers
	
5- print
	
	prints all the rules that were used to sort the stack


the path:

1- we pass our arguments thru int main, check if its less than 2 we exit
2- we pass av and ac -1 to "stackmaker"
3- in stackmaker we check if the input is empty, we exit
4- we initialize "input" with the first arg
5- we go to a loop that joins all our arguments to input
6- we pass input to wordcount which will check how much we should allocate
	for our int array, and save that value in "numbercount"
7- we split up input with spaces and store it in tArr (a 2d array)
8- we pass tArr and numbercount to "parser" and based on the res we print good or bad
9- in parser, we allocate memory for our intarr
10- we skip +/- once (if any), check if after is empty (and exit), if not
	we pass our string char by char to isdigit
11- we atoi our args one by one and pass them to "checker" along with the current intarr
12- in checker we see if our integer has already been present in the intarray, to avod having
	duplicates
13- if all succeeds we print good, else bad